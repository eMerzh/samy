worker_processes 2;
daemon off;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {

    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    upstream app_server {
        server unix:/opt/webserver/run/gunicorn.sock fail_timeout=2s;
    }

#      server {
#         # port to listen on. Can also be set to an IP:PORT
#         listen 80;
#         location /healthcheck/ {
#             return 200;
#         }
#      }


    server {
        # port to listen on. Can also be set to an IP:PORT
        listen 80 default_server;
        #client_max_body_size 100M;
        #server_name ... ... ...;
        #127.0.0.1 localhost deactivation.pikotechnologies.net *.elasticbeanstalk.com awseb-AWSEB-AJRE1RG0ZK4L-81046415.eu-central-1.elb.amazonaws.com;

        charset utf-8;

        location = / {
            alias /var/www/react/;
        }

        location / {
            alias /var/www/react/;
        }

        location /admin/ {
            try_files $uri @proxy_to_app;
        }

        location /api/ {
            try_files $uri @proxy_to_app;
        }

        location /healthcheck/ {
            return 200;
        }

        location /favicon.ico {
            return 204;
            access_log off;
            log_not_found off;
        }

        location /static/ {
            alias /var/www/static/;
        }

         location /static/css/ {
            alias /var/www/react/static/css/;
        }

        location /static/js/ {
            alias /var/www/react/static/js/;
        }

        location /static/media/ {
            alias /var/www/react/static/media/;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }
}
